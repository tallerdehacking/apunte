<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aplicaciones Web on</title><link>/docs/apps-web/</link><description>Recent content in Aplicaciones Web on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="/docs/apps-web/index.xml" rel="self" type="application/rss+xml"/><item><title>Intro a Aplicaciones Web</title><link>/docs/apps-web/intro/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/intro/</guid><description>Motivación Web es uno de los temas más amplios en las competencias de CTF. Los challenges se basan principalmente en la explotación de vulnerabilidades reales en los sistemas, pero también pueden incorporar elementos de otros temas también, como Stego, OSINT o PWN. Para efectos de este curso nos centraremos en la detección y explotación de vulnerabilidades comunes, mientras que la resolución de los challenges surgirá casi como un efecto secundario.</description></item><item><title>Técnicas Básicas de Análisis Web</title><link>/docs/apps-web/tecnicas-basicas/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/tecnicas-basicas/</guid><description>En este capítulo hablaremos de algunas de las técnicas más básicas utilizadas para en análisis web. Para estas no se requiere ningún o casi ningún conocimiento sobre el funcionamiento o características del sitio, y pueden ser aplicadas de manera casi inmediata. Usualmente se utiliza herramientas muy simples, que requieren muy poca configuración para ser usadas. Desde el lado del servidor, suele ser bastante fácil detectar el uso de estas herramientas, por lo que los sistemas relativamente bien monitoreados usualmente bloquean IPs con este comportamiento.</description></item><item><title>Cross-Site Scripting</title><link>/docs/apps-web/xss/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/xss/</guid><description>El Cross-Site Scripting, o XSS (incluido en el punto 3 del OWASP Top 10), se refiere a una clase de vulnerabilidades que intentan introducir código JavaScript en un sitio web, el cual será ejecutado en el navegador de otros usuarios. Dependiendo de la aplicación en específico, las repercusiones de esto varían desde meras molestias hasta la completa ruptura de confidencialidad e integridad del sistema.
Existen 3 tipos:
Almacenado: El payload queda almacenado en algún lado y no es necesario estar activamente atacando a la víctima.</description></item><item><title>Inyecciones</title><link>/docs/apps-web/inyecciones/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/inyecciones/</guid><description>En términos generales, una inyección (punto 3 del OWASP Top 10) es un ataque que intenta confundir al servidor de forma que interprete datos como si fueran código. Esto tiene un potencial muy grande de explotación, aunque usualmente está restringido por factores como filtros, configuraciones de seguridad y tecnologías usadas.
Estos ataques suelen conllevar a filtración de información, pero también puede ser posible crear, modificar y eliminar datos, ejecutar comandos de sistema, enviar requests a otros servidores, y realizar una denegación de servicio (DoS) por la utilización de demasiados recursos.</description></item><item><title>Remote Code Execution</title><link>/docs/apps-web/rce/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/rce/</guid><description>El Remote Code Execution (RCE) se refiere a la ejecución de comandos de sistema, o de algún lenguaje instalado, sin tener acceso a una terminal ni algún otro canal permitido para ejecutar comandos. El alcance de este ataque depende del sistema operativo, frameworks, lenguajes y filtros que se tenga instalados en el servidor.
Similar a las inyecciones SQL de segundo orden, la ejecución de comandos remotos pueden y suelen requerir múltiples pasos.</description></item><item><title>Reverse Shell</title><link>/docs/apps-web/reverse-shell/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/reverse-shell/</guid><description>En el capítulo anterior vimos cómo ejecutar comandos de manera remota en un servidor, sin tener acceso a una terminal. Esto es muy útil en un comienzo, pero rápidamente se vuelve evidente la lentitud, torpeza y limitaciones que significa este medio. Sería mucho más cómodo si de alguna forma se pudiese obtener acceso a una terminal, o shell, con la cual ejecutar comandos de manera más directa, y sin tener que pasar por todo el proceso remoto.</description></item><item><title>Broken Access Control</title><link>/docs/apps-web/access-control/</link><pubDate>Wed, 03 Apr 2024 22:45:45 +0000</pubDate><guid>/docs/apps-web/access-control/</guid><description>El control de acceso es una política aplicada a los usuarios, de manera que no puedan actuar fuera de sus permisos asignados. Las fallas en estas políticas suelen conllevar a la pérdida de confidencialidad, modificación o destrucción de recursos, o la ejecución de procesos no autorizados.
A continuación veremos algunos ejemplos de pérdida de control de acceso, sin embargo, esta clase de vulnerabilidades no se limita únicamente a estos.
Principio del Privilegio Mínimo El principio del privilegio mínimo (PoLP: Principle of least privilege) se refiere a la práctica de asignar los permisos estrictamente necesarios para el funcionamiento del sistema, y nada más.</description></item><item><title>Common Vulnerabilities and Exposures</title><link>/docs/apps-web/cve/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/cve/</guid><description>Muchas veces ustedes se encontrarán con sistemas (web u otro tipo) que utilizan software con vulnerabilidades conocidas (punto 6 del OWASP Top 10). Estas vulnerabilidades se catalogan como Common Vulnerabilities and Exposures (CVE), el cual es un sistema que intenta proveer información y documentación sobre vulnerabilidades conocidas públicamente. Esto se suele documentar junto a su puntaje CVSS (Common Vulnerabilities Scoring System).
CVSS Es un sistema abierto para comunicar las características y severidad de vulnerabilidades conocidas en software.</description></item><item><title>Ejercicios Apps Web</title><link>/docs/apps-web/ejercicios/</link><pubDate>Tue, 06 Oct 2020 08:48:45 +0000</pubDate><guid>/docs/apps-web/ejercicios/</guid><description>Web I Crearse una cuenta en Hack The Box.
Hacer el challenge Canvas de la categoría Misc en HTB.
Resolver los labs de Information disclosure de PortSwigger. Necesitarán una cuenta para ver los labs de PortSwigger.
Web II Completar el XSS Game hecho por Google. En este verán distintos tipos de XSS y tendrán que evadir filtros.
Resolver los laboratorios de Cross-Site Scripting de PortSwigger.</description></item></channel></rss>